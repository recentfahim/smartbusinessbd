# Generated by Django 2.2.8 on 2020-04-12 16:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory', '0003_auto_20200412_2243'),
        ('users', '0002_payment_subscription_tempdata'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('coreapi', '0002_auto_20200323_0036'),
    ]

    operations = [
        migrations.CreateModel(
            name='EcommerceHasProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('price', models.CharField(max_length=10)),
                ('quantity', models.CharField(max_length=5)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ecommercehasproduct_created_by', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ecommercehasproduct_deleted_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ecommerce_has_product',
            },
        ),
        migrations.CreateModel(
            name='EcommerceSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('name', models.CharField(max_length=30)),
                ('logo', models.CharField(blank=True, max_length=30, null=True)),
                ('website', models.CharField(blank=True, max_length=30, null=True)),
                ('shop_link', models.CharField(blank=True, max_length=50, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ecommercesite_created_by', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ecommercesite_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ecommercesite_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ecommerce_store',
            },
        ),
        migrations.CreateModel(
            name='StoreProductTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('quantity', models.FloatField(blank=True, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('is_product_to_store_product', models.BooleanField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='storeproducttransaction_created_by', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='storeproducttransaction_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('ecommerce', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='storeproducttransaction_ecommerce', to='Ecommerce.EcommerceSite')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='storeproducttransaction_product', to='inventory.Product')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='storeproducttransaction_updated_by', to=settings.AUTH_USER_MODEL)),
                ('variants', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='storeproducttransaction_variant', to='inventory.ProductVariant')),
                ('warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='storeproducttransaction_warehouse', to='inventory.Warehouse')),
            ],
            options={
                'db_table': 'store_product_transaction',
            },
        ),
        migrations.CreateModel(
            name='StoreProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('quantity', models.CharField(blank=True, max_length=32, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='storeproduct_created_by', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='storeproduct_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('ecommerce', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='storeproduct_ecommerce', to='Ecommerce.EcommerceSite')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='storeproduct_product', to='inventory.Product')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='storeproduct_updated_by', to=settings.AUTH_USER_MODEL)),
                ('variants', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='storeproduct_variant', to='inventory.ProductVariant')),
            ],
            options={
                'db_table': 'store_product',
            },
        ),
        migrations.CreateModel(
            name='SellRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('price', models.CharField(max_length=10)),
                ('quantity', models.CharField(max_length=5)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='sellrecord_created_by', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sellrecord_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('ecommerce_has_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sellrecord_ecommerce_has_product', to='Ecommerce.EcommerceHasProduct')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='sellrecord_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'sell_record',
            },
        ),
        migrations.CreateModel(
            name='ProductTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('quantity', models.CharField(blank=True, max_length=32, null=True)),
                ('is_sell', models.BooleanField(blank=True, default=False, null=True)),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='producttransaction_contact', to='users.Contact')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='producttransaction_created_by', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='producttransaction_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='producttransaction_product', to='inventory.Product')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='producttransaction_updated_by', to=settings.AUTH_USER_MODEL)),
                ('variants', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='producttransaction_variant', to='inventory.ProductVariant')),
                ('warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='producttransaction_warehouse', to='inventory.Warehouse')),
            ],
            options={
                'verbose_name': 'product_transaction',
                'verbose_name_plural': 'product_transactions',
                'db_table': 'product_transaction',
            },
        ),
        migrations.CreateModel(
            name='Partnership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('percentage', models.CharField(blank=True, max_length=5, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='partnership_company', to='coreapi.Company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='partnership_created_by', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='partnership_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='partnership_partner', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='partnership_product', to='inventory.Product')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='partnership_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'partnership',
            },
        ),
        migrations.AddField(
            model_name='ecommercehasproduct',
            name='ecommerce',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ecommercehasproduct_online_store', to='Ecommerce.EcommerceSite'),
        ),
        migrations.AddField(
            model_name='ecommercehasproduct',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ecommercehasproduct_product', to='inventory.Product'),
        ),
        migrations.AddField(
            model_name='ecommercehasproduct',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ecommercehasproduct_updated_by', to=settings.AUTH_USER_MODEL),
        ),
    ]
